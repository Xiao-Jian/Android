import java.awt.Color;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

public class test
{
	public static void main(String[] args) 
	{
		//System.out.println("t        (I) ");
		int t=0;
		int z=5;
		int w=10;
		int Y=6000;
		double R1,R2,D;
		double G=10000.00;
		double I=1000.00;
		double [] DATA = new double[1001];
		D=Y-I;
		R1=D/z;
		R2=G/w;
		//System.out.println(t+"        "+I);
		DATA[0]=I;
		while(t<1000)
		{
			t=t+1;
			I=I+R2;
			G=G+R1-R2;
			D=Y-I;
			R1=D/z;
			R2=G/w;
			//System.out.println(t+"        "+I);
			DATA[t]=I;
		}
		//Diagram dia=new Diagram();
		g.setColor(Color.RED);     
	   	g.drawLine(30, 70, 30, 370);    
	   	g.drawLine(30, 370, 330, 370);    
	   	g.drawString("0", 15, 380);    
	   	g.drawString("300", 325, 385);    
	   	g.drawString("300", 8, 65);    
	   	int x,y,i=0;     
	   	while(i<DATA.length) {      
	   		x=Integer.parseInt(DATA[i]);     
	   		y=Integer.parseInt(DATA[i+1]);     
	   		i=i+2;      
	   		g.setColor(Color.BLUE);      
	   		g.drawString("*", x+30, 400-y);    
		} 
	}
}

class Diagram extends JFrame implements ActionListener {  
	JMenuBar menu=new JMenuBar();  
	JMenu file=new JMenu("File");   
	JMenuItem open=new JMenuItem("Open");   
	JMenuItem rand=new JMenuItem("Start");  
	Container con=getContentPane();  
	int a,c=1;  
	String[] num;   
	JFileChooser chooser=new JFileChooser();  
	Diagram() {   
		super("ProgrammingV1.1");   
		this.setBounds(500,200,400,400);   
		setJMenuBar(menu);   
		menu.add(file);   
		file.add(open);   
		file.add(rand);      
		rand.addActionListener(this); 
		open.addActionListener(this);    
		this.setDefaultCloseOperation(EXIT_ON_CLOSE);   
		this.setVisible(true);    
	}     
	public void actionPerformed(ActionEvent e) {   
		// TODO Auto-generated method stub   
		if(e.getSource()==rand) {    
			con.repaint();     
			String s=JOptionPane.showInputDialog(null, "Print The Number", "Start", JOptionPane.QUESTION_MESSAGE);    
			a=Integer.parseInt(s);    
			c=1;     
			paintComponents(getGraphics());    
		}    
		else if(e.getSource()==open) {    
			con.repaint();    
			choice();    
			c=0;     
			paintComponents(getGraphics());   
		}  
	}     
	public void paintComponents(Graphics g) {   
		//super.paintComponents(g);   
		if(c==1) {     
			g.setColor(Color.DARK_GRAY);    
			g.drawLine(30, 70, 30, 370);    
			g.drawLine(30, 370, 330, 370);    
			g.drawString("0", 15, 380);    
			g.drawString("300", 325, 385);   
			g.drawString("300", 8, 65);    
			//Graphics g2=(Graphics)g;    
			int x,y,b=0;    
			while(b<a) {      
				x=(int)(Math.random()*301)+30;     
				y=(int)(Math.random()*301)+70;     
				g.setColor(Color.MAGENTA);     
				g.drawString("*", x, y);     
				b++;    
			}     
		}    
		else if(c==0) {     
			//Graphics2D g2= (Graphics2D)g; 
		  	g.setColor(Color.RED);     
		   	g.drawLine(30, 70, 30, 370);    
		   	g.drawLine(30, 370, 330, 370);    
		   	g.drawString("0", 15, 380);    
		   	g.drawString("300", 325, 385);    
		   	g.drawString("300", 8, 65);    
		   	int x,y,i=0;     
		   	while(i<num.length) {      
		   		x=Integer.parseInt(num[i]);     
		   		y=Integer.parseInt(num[i+1]);     
		   		i=i+2;      
		   		g.setColor(Color.BLUE);      
		   		g.drawString("*", x+30, 400-y);    
			}     
		}  
	}   
	void choice() {   
		int i=0;    
		if(chooser.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){    File file=chooser.getSelectedFile();    
		try {     
			FileReader fread = new FileReader(file);     
			BufferedReader bread=new BufferedReader(fread);    
			String line=bread.readLine();     
			num=line.split("[,]");     
			//line=bread.readLine();     
			while(i<num.length) {       
				System.out.println("("+num[i]+","+num[i+1]+")");      
				i=i+2;     
			}     
		} catch (FileNotFoundException e) {     
			// TODO Auto-generated catch block     
			e.printStackTrace();    
			} catch (IOException e) {      
				// TODO Auto-generated catch block     
				e.printStackTrace();   
				}  
		}
	}
}